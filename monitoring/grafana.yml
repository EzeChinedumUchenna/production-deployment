apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  my-dashboard.json: |
    {
      "id": null,
      "title": "Health Check",
      "panels": [
        {
          "type": "graph",
          "title": "Health Endpoint",
          "targets": [
            {
              "expr": "up{job='health-endpoint'}",
              "legendFormat": "Health",
              "refId": "A"
            }
          ],
          "datasource": "Prometheus"
        }
      ],
      "schemaVersion": 16,
      "version": 1
    }

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          volumeMounts:
            - name: dashboard-volume
              mountPath: /var/lib/grafana/dashboards
            - name: provisioning
              mountPath: /etc/grafana/provisioning
      volumes:
        - name: dashboard-volume
          configMap:
            name: grafana-dashboard
        - name: provisioning
          configMap:
            name: grafana-provisioning
---

# Config map having both Prometheus and Garfana as Datasource
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        options:
          path: /var/lib/grafana/dashboards
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://localhost:9090
        isDefault: true

      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          maxLines: 1000